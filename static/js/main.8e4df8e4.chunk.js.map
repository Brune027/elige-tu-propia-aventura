{"version":3,"sources":["components/Recordatorio.jsx","components/Selector.jsx","components/Pagina.jsx","components/Historia.jsx","App.js","index.js"],"names":["Recordatorio","seleccionesAnteriores","this","props","className","at","slice","map","seleccion","index","Component","Selector","opciones","onOpcionSeleccionada","ultimaPagina","onClick","Object","keys","key","toUpperCase","Pagina","pagina","historia","endsWith","React","Historia","state","paginas","paginaActiva","contador","iniciar","setState","data","obtenerSiguientePagina","prevState","opcion","siguienteId","siguientePagina","find","id","nextProps","nextState","App","ReactDOM","render","document","getElementById"],"mappings":"4QAEaA,EAAb,4JACI,WACI,IAAOC,EAAyBC,KAAKC,MAA9BF,sBAEP,OAAO,sBAAKG,UAAU,eAAf,UACH,yDAAyBH,EAAsBI,IAAI,MACnD,kEACA,6BAEQJ,EAAsBK,MAAM,GAAI,GAAGC,KAAI,SAACC,EAAWC,GAC/C,OAAO,6BAAiBD,GAARC,eAVxC,GAAkCC,aCArBC,EAAb,4JACI,WACI,MAAuDT,KAAKC,MAArDS,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,qBAAsBC,EAAvC,EAAuCA,aAIvC,OAAO,qBAAKV,UAAU,WAAf,SACDU,EACE,qBAAKV,UAAU,SAAf,SACI,wBAAQA,UAAU,UAAUW,QAAS,kBAAMF,EAAqB,QAAhE,gCAELD,EACCI,OAAOC,KAAKL,GAAUL,KAAI,SAACW,GACvB,OAAO,sBAAKd,UAAU,SAAf,UACH,wBAAQA,UAAU,UAAUW,QAAS,kBAAMF,EAAqBK,IAAhE,SAAuEA,EAAIC,gBAC3E,6BAAKP,EAASM,OAFkBA,MAIpC,mCAjBpB,GAA8BR,aCIjBU,EAAb,4JAEI,WAAS,IAAD,EACJ,EAA8DlB,KAAKC,MAA5DkB,EAAP,EAAOA,OAAQR,EAAf,EAAeA,qBAAsBZ,EAArC,EAAqCA,sBAE/Ba,EAAY,OAAGO,QAAH,IAAGA,GAAH,UAAGA,EAAQC,gBAAX,aAAG,EAAkBC,SAAS,QAChD,OAAO,qCACH,oBAAInB,UAAU,WAAd,gBAA0BiB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQC,WAClC,cAAC,EAAD,CAAUV,SAAUS,EAAOT,SAAUC,qBAAsBA,EACvDC,aAAcA,IAClB,cAAC,EAAD,CAAcb,sBAAuBA,WAVjD,GAFoBuB,IAAbd,WCAMe,EAAb,4MACIC,MAAQ,CACJC,QAAS,GACTC,aAAc,GACd3B,sBAAuB,GACvB4B,SAAU,GALlB,EAaIC,QAAU,WACN,EAAKC,SAAS,CACVJ,QAASK,EACTJ,aAAcI,EAAK,GACnB/B,sBAAuB,GACvB4B,SAAU,KAlBtB,EA2BII,uBAAyB,SAACC,EAAWC,GACjC,IAAMC,EAAeF,EAAUL,SAAW,EAAKM,EAE3CE,EAAkBH,EAAUP,QAAQW,MAAK,SAAAjB,GAAM,OAAIA,EAAOkB,KAAOH,KAGrE,OAAOC,GAAoCH,EAAUN,cAjC7D,EAoCIf,qBAAuB,SAACsB,GAEN,QAAXA,EACC,EAAKJ,UAAS,SAAAG,GAAS,kCAChBA,GADgB,IAEnBN,aAAc,EAAKK,uBAAuBC,EAAWC,GACrDlC,sBAAsB,GAAD,mBAAMiC,EAAUjC,uBAAhB,CAAuCkC,EAAOhB,gBACnEU,SAAUK,EAAUL,SAAW,OAInC,EAAKC,WA/CjB,uDAQI,WAEI5B,KAAK4B,YAVb,mCAsBI,SAAsBU,EAAWC,GAE7B,OAAOvC,KAAKwB,MAAME,eAAiBa,EAAUb,eAxBrD,oBAkDI,WACI,OAAO,cAAC,EAAD,CAAQP,OAAQnB,KAAKwB,MAAME,aAC9Bf,qBAAsBX,KAAKW,qBAC3BZ,sBAAuBC,KAAKwB,MAAMzB,4BArD9C,GAA8BS,aCOfgC,E,4JAPb,WACI,OAAO,qBAAKtC,UAAU,SAAf,SACL,cAAC,EAAD,U,GAHUM,aCElBiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.8e4df8e4.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nexport class Recordatorio extends Component {\r\n    render() {\r\n        const {seleccionesAnteriores} = this.props;\r\n\r\n        return <div className=\"recordatorio\">\r\n            <h3>Selección anterior: {seleccionesAnteriores.at(-1)}</h3>\r\n            <h4>Historial de opciones elegidas: </h4>\r\n            <ul>\r\n                {\r\n                    seleccionesAnteriores.slice(0, -1).map((seleccion, index) => {\r\n                        return <li key={index}>{seleccion}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    }\r\n}","import { Component } from \"react\";\r\n\r\nexport class Selector extends Component {\r\n    render() {\r\n        const {opciones, onOpcionSeleccionada, ultimaPagina} = this.props;\r\n        \r\n        // Si estamos en la última pagina entonces sólo se ve el botón Volver a empezar, sino se muestran las opciones\r\n        // Por las dudas que en algún momento existan más opciones buscamos todas las propiedades que existan en el objeto\r\n        return <div className=\"opciones\">\r\n            { ultimaPagina ? \r\n                <div className=\"opcion\">\r\n                    <button className=\"botones\" onClick={() => onOpcionSeleccionada(\"FIN\")}>Volver a empezar</button>\r\n                </div>\r\n            : (opciones ?\r\n                Object.keys(opciones).map((key) => {\r\n                    return <div className=\"opcion\" key={key}>\r\n                        <button className=\"botones\" onClick={() => onOpcionSeleccionada(key)}>{key.toUpperCase()}</button> \r\n                        <h2>{opciones[key]}</h2>\r\n                    </div>\r\n                }): <></>)\r\n            }\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Recordatorio } from \"./Recordatorio\";\r\nimport { Selector } from \"./Selector\";\r\n\r\nconst {Component} = React;\r\n\r\nexport class Pagina extends Component {\r\n\r\n    render(){\r\n        const {pagina, onOpcionSeleccionada, seleccionesAnteriores} = this.props;\r\n        // Para saber si es la última página se chequea que termine con \"FIN.\"\r\n        const ultimaPagina = pagina?.historia?.endsWith(\"FIN.\");\r\n        return <>\r\n            <h1 className=\"historia\">{pagina?.historia}</h1>\r\n            <Selector opciones={pagina.opciones} onOpcionSeleccionada={onOpcionSeleccionada} \r\n                ultimaPagina={ultimaPagina}></Selector>\r\n            <Recordatorio seleccionesAnteriores={seleccionesAnteriores}></Recordatorio>\r\n        </>\r\n    }\r\n}","import {Component} from \"react\";\r\nimport data from \"./data.json\";\r\nimport { Pagina } from \"./Pagina\";\r\n\r\nexport class Historia extends Component {\r\n    state = {\r\n        paginas: [],\r\n        paginaActiva: {},\r\n        seleccionesAnteriores: [],\r\n        contador: 1\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Reinicia el estado del componente para volver al principio\r\n        this.iniciar();\r\n    }\r\n    \r\n    iniciar = ()=>{\r\n        this.setState({\r\n            paginas: data, \r\n            paginaActiva: data[0],\r\n            seleccionesAnteriores: [],\r\n            contador: 1\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Esto es para evitar que se haga el render de la pagina si el boton que clickea el usuario es el de FIN\r\n        return this.state.paginaActiva !== nextState.paginaActiva;\r\n    }\r\n\r\n    obtenerSiguientePagina = (prevState, opcion) =>{\r\n        const siguienteId = (prevState.contador + 1) + opcion;\r\n        \r\n        let siguientePagina = prevState.paginas.find(pagina => pagina.id === siguienteId);\r\n    \r\n        // Si la siguiente pagina no existe se queda en la actual\r\n        return siguientePagina ? siguientePagina : prevState.paginaActiva;\r\n    }\r\n\r\n    onOpcionSeleccionada = (opcion) => {\r\n        // Si la opción seleccionada no es el final avanza a la siguiente pagina\r\n        if(opcion !== \"FIN\"){\r\n            this.setState(prevState => ({\r\n                ...prevState, \r\n                paginaActiva: this.obtenerSiguientePagina(prevState, opcion),\r\n                seleccionesAnteriores: [...prevState.seleccionesAnteriores, opcion.toUpperCase()],\r\n                contador: prevState.contador + 1\r\n            }));\r\n        }\r\n        else \r\n            this.iniciar();\r\n    }\r\n      \r\n    render(){\r\n        return <Pagina pagina={this.state.paginaActiva} \r\n            onOpcionSeleccionada={this.onOpcionSeleccionada}\r\n            seleccionesAnteriores={this.state.seleccionesAnteriores}></Pagina>\r\n    }\r\n}","import { Component } from \"react\";\nimport { Historia } from './components/Historia';\n\nclass App extends Component{\n  render(){\n      return <div className=\"layout\">\n        <Historia></Historia>\n      </div>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}